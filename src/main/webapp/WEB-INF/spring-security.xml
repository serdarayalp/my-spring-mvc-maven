<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/security
        http://www.springframework.org/schema/security/spring-security.xsd">

    <!-- Enables web security -->
    <!-- use-expressions="true" to enable the SpEL (Spring Expression Language) -->
    <!-- By setting auto-config="true", you enable the filters for form-based logins, HTTP basic authentication, and logouts. If you prefer,^
        you can set auto-config="false" (that’s the default) and specify the desired filters
        manually. -->
    <!-- The ‹http› namespace block always creates an SecurityContextPersistenceFilter, an ExceptionTranslationFilter and a
    FilterSecurityInterceptor. These are fixed and cannot be replaced with alternatives. When we have set "auto-config" to true,
    BasicAuthenticationFilter, LogoutFilter and UsernamePasswordAuthenticationFilter also gets added to the filter chain.-->
    <http use-expressions="true" auto-config="true" authentication-manager-ref="authenticationManager">
        <intercept-url pattern="/" access="hasAnyRole('ROLE_ADMIN')"/>
    </http>

    <beans:bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>

    <!--<authentication-manager id="authenticationManager">
        <authentication-provider>
            <password-encoder ref="passwordEncoder"/>

            <user-service>
                &lt;!&ndash; Password = 1234 &ndash;&gt;
                <user name="admin" password="$2a$12$fKi6DQXbu1yYIyCdHip/guYXqDZqmAXfxKft5S0KCOatCjmBeTLMi"
                      authorities="ROLE_ADMIN"/>
            </user-service>
        </authentication-provider>
    </authentication-manager>-->

</beans:beans>