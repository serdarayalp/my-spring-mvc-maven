<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd
       http://www.springframework.org/schema/security
       http://www.springframework.org/schema/security/spring-security.xsd">

    <context:component-scan base-package="com.regiocom"/>


    <!-- <mvc:annotation-driven/> -->

    <!--<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/"/>
        <property name="suffix" value=".jsp"/>
    </bean>-->


    <!-- ************************************** -->

    <context:component-scan base-package="org.keycloak.adapters.springsecurity"/>

    <bean id="keycloakAuthenticationProvider"
          class="org.keycloak.adapters.springsecurity.authentication.KeycloakAuthenticationProvider"/>

    <security:authentication-manager alias="authenticationManager">
        <security:authentication-provider ref="keycloakAuthenticationProvider"/>
    </security:authentication-manager>

    <bean id="keycloakAuthenticationProcessingFilter"
          class="org.keycloak.adapters.springsecurity.filter.KeycloakAuthenticationProcessingFilter">
        <constructor-arg name="authenticationManager" ref="authenticationManager"/>
    </bean>

    <bean id="adapterDeploymentContext"
          class="org.keycloak.adapters.springsecurity.AdapterDeploymentContextFactoryBean">
        <constructor-arg value="/WEB-INF/keycloak.json"/>
    </bean>

    <bean id="keycloakAuthenticationEntryPoint"
          class="org.keycloak.adapters.springsecurity.authentication.KeycloakAuthenticationEntryPoint">
        <constructor-arg ref="adapterDeploymentContext"/>
    </bean>

    <bean id="keycloakLogoutHandler" class="org.keycloak.adapters.springsecurity.authentication.KeycloakLogoutHandler">
        <constructor-arg ref="adapterDeploymentContext"/>
    </bean>

    <bean id="keycloakPreAuthActionsFilter"
          class="org.keycloak.adapters.springsecurity.filter.KeycloakPreAuthActionsFilter"/>

    <bean id="keycloakSecurityContextRequestFilter"
          class="org.keycloak.adapters.springsecurity.filter.KeycloakSecurityContextRequestFilter"/>

    <bean id="logoutFilter" class="org.springframework.security.web.authentication.logout.LogoutFilter">
        <constructor-arg name="logoutSuccessUrl" value="/"/>
        <constructor-arg name="handlers">
            <list>
                <ref bean="keycloakLogoutHandler"/>
                <bean class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler"/>
            </list>
        </constructor-arg>
        <property name="logoutRequestMatcher">
            <bean class="org.springframework.security.web.util.matcher.AntPathRequestMatcher">
                <constructor-arg name="pattern" value="/sso/logout**"/>
                <constructor-arg name="httpMethod" value="GET"/>
            </bean>
        </property>
    </bean>

    <security:http auto-config="false" entry-point-ref="keycloakAuthenticationEntryPoint">
        <security:custom-filter ref="keycloakPreAuthActionsFilter" before="LOGOUT_FILTER"/>
        <security:custom-filter ref="keycloakAuthenticationProcessingFilter" before="FORM_LOGIN_FILTER"/>
        <security:custom-filter ref="keycloakSecurityContextRequestFilter" after="FORM_LOGIN_FILTER"/>
        <security:custom-filter ref="logoutFilter" position="LOGOUT_FILTER"/>
        <security:intercept-url pattern="/" access="hasAnyRole('ROLE_ADMIN')"/>
    </security:http>


    <bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>

    <!--<authentication-manager id="authenticationManager">
        <authentication-provider>
            <password-encoder ref="passwordEncoder"/>

            <user-service>
                &lt;!&ndash; Password = 1234 &ndash;&gt;
                <user name="admin" password="$2a$12$fKi6DQXbu1yYIyCdHip/guYXqDZqmAXfxKft5S0KCOatCjmBeTLMi"
                      authorities="ROLE_ADMIN"/>
            </user-service>
        </authentication-provider>
    </authentication-manager>-->

</beans>